{
  "swagger": "2.0",
  "info": {
    "title": "InterSystems IRIS REST API ingestion demo (server)",
    "description": "A simple REST interface to evaluate the ingestion speed of an InterSystems IRIS REST API.",
    "contact": {
      "name": "InterSystems Community",
      "url": "https://openexchange.intersystems.com/"
    },
    "license": {
      "name": "MIT license",
      "url": "https://github.com/dootje-2004/intersystems-rest-demo/blob/main/LICENSE.txt"
    },
    "version": "0.0.1"
  },
  "basePath": "/demo",
  "schemes": [
    "http"
  ],
  "paths": {
    "/": {
      "post": {
        "description": "Allows upload of a single request.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "payload",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Message"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Object has been saved"
          },
          "default": {
            "description": "Unexpected error"
          }
        },
        "operationId": "processRequest"
      }
    },
    "/request/count": {
      "get": {
        "description": "Returns the number of test requests.",
        "produces": [
          "text/plain"
        ],
        "responses": {
          "200": {
            "description": "Value is returned normally."
          }
        },
        "operationId": "getCount"
      }
    },
    "/request/count/{count}": {
      "put": {
        "description": "Stores the number of test requests.",
        "parameters": [
          {
            "in": "path",
            "type": "number",
            "name": "count",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Value has been set."
          }
        },
        "operationId": "setCount"
      }
    },
    "/request/size": {
      "get": {
        "description": "Returns the size of the request payload.",
        "produces": [
          "text/plain"
        ],
        "responses": {
          "200": {
            "description": "Value is returned normally."
          }
        },
        "operationId": "getSize"
      }
    },
    "/request/size/{size}": {
      "put": {
        "description": "Stores the size of the request payload.",
        "parameters": [
          {
            "in": "path",
            "type": "number",
            "name": "size",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Value has been set."
          }
        },
        "operationId": "setSize"
      }
    },
    "/request/treatasstring": {
      "get": {
        "description": "Returns 1 if the request payload is processed as a string.",
        "produces": [
          "text/plain"
        ],
        "responses": {
          "200": {
            "description": "Value is returned normally."
          }
        },
        "operationId": "getPayloadTreatment"
      }
    },
    "/request/treatasstring/{treat}": {
      "put": {
        "description": "Stores the setting of how the request payload is processed (string or stream).",
        "parameters": [
          {
            "in": "path",
            "type": "number",
            "name": "treat",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Value has been set."
          }
        },
        "operationId": "setPayloadTreatment"
      }
    },
    "/process/delay": {
      "get": {
        "description": "Returns the processing delay of the server's Business Process.",
        "produces": [
          "text/plain"
        ],
        "responses": {
          "200": {
            "description": "Value is returned normally."
          }
        },
        "operationId": "getDelay"
      }
    },
    "/process/delay/{delay}": {
      "put": {
        "description": "Sets the processing delay of the server's Business Process.",
        "parameters": [
          {
            "in": "path",
            "type": "number",
            "name": "delay",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Value has been set."
          }
        },
        "operationId": "setDelay"
      }
    },
    "/process/poolsize": {
      "get": {
        "description": "Returns the poolsize of the server's Business Process.",
        "produces": [
          "text/plain"
        ],
        "responses": {
          "200": {
            "description": "Value is returned normally."
          }
        },
        "operationId": "getPoolsize"
      }
    },
    "/process/poolsize/{poolsize}": {
      "put": {
        "description": "Sets the poolsize of the server's Business Process.",
        "parameters": [
          {
            "in": "path",
            "type": "number",
            "name": "poolsize",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Value has been set."
          }
        },
        "operationId": "setPoolsize"
      }
    },
    "/service/sync": {
      "get": {
        "description": "Returns the Sync setting of the Business Service.",
        "produces": [
          "text/plain"
        ],
        "responses": {
          "200": {
            "description": "Value is returned normally."
          }
        },
        "operationId": "getServiceSync"
      }
    },
    "/service/sync/{sync}": {
      "put": {
        "description": "Sets the Sync parameter of the Business Service.",
        "parameters": [
          {
            "in": "path",
            "type": "number",
            "name": "sync",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Value has been set."
          }
        },
        "operationId": "setServiceSync"
      }
    },
    "/rest/forward": {
      "get": {
        "description": "Returns the forwarding method of the REST class.",
        "produces": [
          "text/plain"
        ],
        "responses": {
          "200": {
            "description": "Value is returned normally."
          }
        },
        "operationId": "getForwardingMethod"
      }
    },
    "/rest/forward/{method}": {
      "put": {
        "description": "Sets the forwarding method of the REST class.",
        "parameters": [
          {
            "in": "path",
            "type": "string",
            "enum": [ "SYNC", "ASYNC", "STORE" ],
            "name": "method",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Value has been set."
          }
        },
        "operationId": "setForwardingMethod"
      }
    },
    "/client/sync": {
      "get": {
        "description": "Returns the Sync setting for the client.",
        "produces": [
          "text/plain"
        ],
        "responses": {
          "200": {
            "description": "Value is returned normally."
          }
        },
        "operationId": "getClientSync"
      }
    },
    "/client/sync/{sync}": {
      "put": {
        "description": "Stores the Sync parameter for the client.",
        "parameters": [
          {
            "in": "path",
            "type": "number",
            "name": "sync",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Value has been set."
          }
        },
        "operationId": "setClientSync"
      }
    },
    "/data": {
      "get": {
        "description": "Returns all data points.",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Data returned normally."
          }
        },
        "operationId": "getData"
      },
      "delete": {
        "description": "Removes all data points.",
        "produces": [
          "text/plain"
        ],
        "responses": {
          "200": {
            "description": "Data removed."
          }
        },
        "operationId": "deleteData"
      }
    }
  },
  "definitions": {
    "Message": {
      "type": "object",
      "properties": {
        "id": {
          "description": "Unique identifier",
          "type": "integer"
        },
        "message": {
          "description": "Arbitrary string",
          "type": "string"
        }
      }
    }
  }
}